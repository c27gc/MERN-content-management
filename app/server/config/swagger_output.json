{
  "swagger": "2.0",
  "info": {
    "title": "MERN API",
    "description": "API documentation for the MERN application",
    "version": "1.0.0"
  },
  "host": "localhost:5000",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
    }
  },
  "paths": {
    "/healthcheck": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/register": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User registration details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterUserDTO"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "description": "Login a user with their email and password.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User login details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginUserDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "token": {
                  "type": "string",
                  "example": "jwt_token_here"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request, validation failed"
          }
        }
      }
    },
    "/role": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get user role",
        "description": "Get the role of the user based on the provided token.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token for authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of user role",
            "schema": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string",
                  "example": "Creador"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request, validation failed"
          },
          "401": {
            "description": "Unauthorized, token not provided or invalid"
          }
        }
      }
    },
    "/topic/search": {
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "Search topics by term",
        "description": "Retrieves a list of topics that match the search term.",
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "description": "The term to search for topics",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of matching topics retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "topic_id_1"
                  },
                  "name": {
                    "type": "string",
                    "example": "Topic 1"
                  },
                  "description": {
                    "type": "string",
                    "example": "Description of Topic 1"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request, validation failed"
          }
        }
      }
    },
    "/topic/": {
      "post": {
        "tags": [
          "Topics"
        ],
        "summary": "Create a new topic",
        "description": "Creates a new topic with the given details.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Topic creation details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTopicDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Topic created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Topic created successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request, validation failed"
          }
        }
      },
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "Get all topics",
        "description": "Retrieves a list of all topics.",
        "responses": {
          "200": {
            "description": "List of topics retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "topic_id_2"
                  },
                  "name": {
                    "type": "string",
                    "example": "Topic 2"
                  },
                  "description": {
                    "type": "string",
                    "example": "Description of Topic 2"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/topic/{id}": {
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "Get a topic by ID",
        "description": "Retrieves a topic by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the topic to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Topic retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "topic_id_1"
                },
                "name": {
                  "type": "string",
                  "example": "Topic 1"
                },
                "description": {
                  "type": "string",
                  "example": "Description of Topic 1"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Topic not found"
          }
        }
      }
    },
    "/category/search": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Search categorys by term",
        "description": "Retrieves a list of categorys that match the search term.",
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "description": "The term to search for categorys",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of matching categorys retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "category_id_1"
                  },
                  "name": {
                    "type": "string",
                    "example": "Category 1"
                  },
                  "description": {
                    "type": "string",
                    "example": "Description of Category 1"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request, validation failed"
          }
        }
      }
    },
    "/category/": {
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Create a new category",
        "description": "Creates a new category with the given details.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Category creation details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCategoryDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Category created successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request, validation failed"
          }
        }
      },
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get all categorys",
        "description": "Retrieves a list of all categorys.",
        "responses": {
          "200": {
            "description": "List of categorys retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "category_id_2"
                  },
                  "name": {
                    "type": "string",
                    "example": "Category 2"
                  },
                  "description": {
                    "type": "string",
                    "example": "Description of Category 2"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/category/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get a category by ID",
        "description": "Retrieves a category by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the category to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Category retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "category_id_1"
                },
                "name": {
                  "type": "string",
                  "example": "Category 1"
                },
                "description": {
                  "type": "string",
                  "example": "Description of Category 1"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Category not found"
          }
        }
      }
    }
  },
  "definitions": {
    "RegisterUserDTO": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "username": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                }
              }
            },
            "email": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                }
              }
            },
            "password": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                }
              }
            },
            "role": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "username",
            "email",
            "password",
            "role"
          ],
          "items": {
            "type": "string"
          }
        },
        "example": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "example": "exampleuser"
            },
            "email": {
              "type": "string",
              "example": "user@example.com"
            },
            "password": {
              "type": "string",
              "example": "password123"
            },
            "role": {
              "type": "string",
              "example": "user"
            }
          }
        }
      }
    },
    "LoginUserDTO": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "email": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                }
              }
            },
            "password": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "email",
            "password"
          ],
          "items": {
            "type": "string"
          }
        },
        "example": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "example": "user@example.com"
            },
            "password": {
              "type": "string",
              "example": "password123"
            }
          }
        }
      }
    },
    "CreateCategoryDTO": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "name": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                }
              }
            },
            "description": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "name",
            "description"
          ],
          "items": {
            "type": "string"
          }
        },
        "example": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Youtube"
            },
            "description": {
              "type": "string",
              "example": "Content from Youtube."
            }
          }
        }
      }
    },
    "CreateTopicDTO": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "name": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                }
              }
            },
            "description": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                }
              }
            },
            "coverImage": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                }
              }
            },
            "allowedContentTypes": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "name",
            "description",
            "coverImage",
            "allowedContentTypes"
          ],
          "items": {
            "type": "string"
          }
        },
        "example": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Technology"
            },
            "description": {
              "type": "string",
              "example": "All about tech."
            },
            "coverImage": {
              "type": "string",
              "example": "http://example.com/cover.jpg"
            },
            "allowedContentTypes": {
              "type": "array",
              "example": [
                "image",
                "video",
                "text"
              ],
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "UpdateTopicDTO": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "name": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                }
              }
            },
            "description": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                }
              }
            },
            "coverImage": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                }
              }
            },
            "allowedContentTypes": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "name",
            "description",
            "coverImage",
            "allowedContentTypes"
          ],
          "items": {
            "type": "string"
          }
        },
        "example": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Science"
            },
            "description": {
              "type": "string",
              "example": "Updated description for science."
            },
            "coverImage": {
              "type": "string",
              "example": "http://example.com/newcover.jpg"
            },
            "allowedContentTypes": {
              "type": "array",
              "example": [
                "image",
                "video"
              ],
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}